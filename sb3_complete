from stable_baselines3.common.env_checker import check_env
from stable_baselines3 import PPO

from gym_blobby.envs.env_blobby import BlobbyEnv
import gymnasium

# Settings
xml_path = "/home/vboxuser/Desktop/HQplus/CS3IP/blobby.xml"
sb_path = "/home/vboxuser/Desktop/HQplus/CS3IP/model/ppo_blobby"
unhealthy_termination = True

def sb3_save():
    env = BlobbyEnv(render_mode=None, xml_file=xml_path, terminate_when_unhealthy=unhealthy_termination)

    check_env(env)
    model = PPO("MlpPolicy", env, verbose=0)
    model.learn(total_timesteps=30000)

    model.save(sb_path)
    print("Training complete")

def sb3_load():
    env = BlobbyEnv(render_mode="human", xml_file=xml_path, terminate_when_unhealthy=unhealthy_termination)
    model = PPO.load(sb_path)

    observation, info = env.reset()
    for _ in range(1000):
        # action = env.action_space.sample()
        action, _states = model.predict(observation)
        observation, reward, terminated, truncated, info = env.step(action)
        
        if terminated or truncated:
            observation, info = env.reset()


# Main
sb3_save()
sb3_load()
